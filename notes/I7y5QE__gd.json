{"_id":"note:I7y5QE__gd","title":"FFT","content":"# Fast Fourier Transform 快速傅里叶变换\n\n## 1.问题引入\n\n对于多项式$f(x)=\\sum^{n}_{i=0}a_ix^i,g(x)=\\sum^{n}_{i=0}b_ix^i$,定义他的乘积$fg$为\n\n$(f g)(x)=\\left(\\sum_{i=0}^n a_i x^i\\right)\\left(\\sum_{i=0}^n b_i x^i\\right)$\n\n显然我们可以以$O(n^2)$的复杂度计算这个乘积的每一项的系数,然而FFT可以用$O(nlogn)$的时间复杂度来进行计算。\n\n## 2.复数的定义与几何图景\n\n形如 $a+b \\mathrm{i} \\quad(a, b \\in \\mathbb{R})$ 的表达式被称为复数， $\\mathbb{C}$ 是全体复数构成的集合。我们称 $\\mathrm{i}$ 为虚数单位。定义两个复数 $a_1+b_1 \\mathrm{i}, a_2+b_2 \\mathrm{i}$ 相等当且仅当 $a_1=a_2$ 且 $b_1=b_2$ 。\n\n$z=a+b \\mathrm{i}$ 中的 $a$ 被称为 $z$ 的实部， $b$ 被称为 $z$ 的虚部。在 $b=0$ 时，将 $z$ 视同 $a$ ；当 $a=0$ 且 $b \\neq 0$ 时，称 $z$ 为纯虚数。\n\n注意到复数也可以被视作有序实数对，故全体复数与平面上所有点存在一一对应。将平面直角坐标系中的点的横坐标视作实部，纵坐标视作虚部，则每一个点 $(a, b)$ 都唯一对应这一个复数 $a+b \\mathrm{i}$ ，此时与复数有上述一一对应关系的平面被称作复平面。\n\n对复数 $z_1=a_1+b_1 \\mathrm{i}, z_2=a_2+b_2 \\mathrm{i}$ ，其具有加法和乘法\n$$\n\\begin{aligned}\nz_1+z_2 & =\\left(a_1+a_2\\right)+\\left(b_1+b_2\\right) \\mathrm{i} \\\\\nz_1 \\cdot z_2 & =\\left(a_1 a_2-b_1 b_2\\right)+\\left(a_1 b_2+a_2 b_1\\right) \\mathrm{i}\n\\end{aligned}\n$$\n\n特别地\n$\\mathrm{i} \\cdot \\mathrm{i}=-1$\n\n记 $-z=(-1) \\cdot z ， z_1-z_2=z_1+\\left(-z_2\\right)$ ，从而我们有了复数的减法。依定义复数的加法和减法在复平面上对应于原点到复数的向量的向量加法和减法。\n\n在实数域上一个实数 $r$ 的乘法逆元是其倒数，所谓逆元意为 “可在乘法中抵消” 即 $r \\cdot \\frac{1}{r}=1$ ，也就是除法。为在复数域上寻找类似的逆元，定义复数 $z=a+b i$ 的共轭复数 $\\bar{z}$ 为 $\\bar{z}=a-b \\mathrm{i}$ ，则 $z \\cdot \\bar{z}=|z|^2$ ， 进而\n$$\n\\forall z \\in \\mathbb{C}-\\{0\\}, \\frac{1}{|z|^2} \\cdot z \\cdot \\bar{z}=1\n$$\n\n所以有 $\\frac{1}{z}=\\bar{z} /|z|^2$ 为 $z$ 的乘法逆元。\n\n![复数的加法与共轭](https://github.com/1248818919/My_NOTE/blob/master/assets/None%20class/FFT/pig.png?raw=true)\n\n容易验证复数加法和乘法具有交换律、结合律、分配律，乘法对加法具有交换律、结合律，其余诸多与$\\mathbb{R}$或$\\mathbb{Q}$类似的加法性质不再一一赘述，读者可查阅.\n\n>https://www.qiuwenbaike.cn/wiki/%E5%9F%9F%EF%BC%88%E6%95%B8%E5%AD%B8%EF%BC%89\n\n一个复数的模长为其实部与虚部的平方之和的算术平方根 (也就是复数到原点的 (欧式) 几何距离)，复数 $z$ 的模长写作 $|z|$ 。即\n$$\n|a+b \\mathrm{i}|=\\sqrt{a^2+b^2}\n$$\n\n定义两个复数 $z, w$ 之间的距离 $d(z, w)=|z-w|$ ，可以发现其满足\n- (正定性) $d(z, w) \\geq 0$ ， 且 $d(z, w)=0 \\Leftrightarrow z=w$ ，直观上即两点距离不小于零，若为零则两点重合\n- (对称性) $d(z, w)=d(w, z)$ ，直观上是 $z$ 到 $w$ 距离和 $w$ 到 $z$ 距离相等\n- (三角不等式) $d(z, w) \\geqslant d\\left(z, z^{\\prime}\\right)+d\\left(z^{\\prime}, w\\right)$ ，直观上是三角形两边之和大于第三边\n\n可以发现这类似于实数的绝对值。我们称满足这三条性质意义下的 $(\\mathbb{C}, d)$ 是一个度量空间。\n容易验证对任意复数 $z_1, z_2$ ，有 $\\left|z_1 \\cdot z_2\\right|=\\left|z_1\\right| \\cdot\\left|z_2\\right|$ 。一如极坐标，复数 $z=a+b \\mathrm{i}$ 可以被唯一表示为 $z=r(\\cos \\theta+\\mathrm{i} \\sin \\theta)$ 的形式，我们称其为复数 $z$ 的三角形式，其中 $r$ 等于 $|z|$。 $\\theta$ 被称为复数 $z$ 的辐角。辐角有无数个，但在 $(-\\pi, \\pi]$ 上只有一个，将之称为辐角主值记作 $\\theta=\\arg (z)$\n\n可以发现这类似于实数的绝对值。我们称满足这三条性质意义下的$(\\mathbb{C},d)$是一个度量空间。\n\n容易验证对任意复数 $z_1, z_2$ ，有 $\\left|z_1 \\cdot z_2\\right|=\\left|z_1\\right| \\cdot\\left|z_2\\right|$ 。一如极坐标，复数 $z=a+b \\mathrm{i}$ 可以被唯一表示为 $z=r(\\cos \\theta+\\mathrm{i} \\sin \\theta)$ 的形式，我们称其为复数 $z$ 的三角形式，其中 $r$ 等于 $|z|$。 $\\theta$ 被称为复数 $z$ 的辐角。辐角有无数个，但在 $(-\\pi, \\pi]$ 上只有一个，将之称为辐角主值记作 $\\theta=\\arg (z)$\n\n![复数z的模厂和三角形式](https://github.com/1248818919/My_NOTE/blob/master/assets/None%20class/FFT/%E5%A4%8D%E6%95%B0z%E7%9A%84%E6%A8%A1%E5%8E%82%E5%92%8C%E4%B8%89%E8%A7%92%E5%BD%A2%E5%BC%8F.png?raw=true)\n\n设复数 $z_1=r_1\\left(\\cos \\theta_1+\\mathrm{i} \\sin \\theta_1\\right) ， z_2=r_2\\left(\\cos \\theta_2+\\mathrm{i} \\sin \\theta_2\\right)$ ，则有:\n$$\n\\begin{aligned}\nz_1 z_2 & =r_1 r_2\\left(\\cos \\theta_1+\\mathrm{i} \\sin \\theta_1\\right) \\cdot\\left(\\cos \\theta_2+\\mathrm{i} \\sin \\theta_2\\right) \\\\\n& =r_1 r_2\\left[\\left(\\cos \\theta_1 \\cos \\theta_2-\\sin \\theta_1 \\sin \\theta_2\\right)+\\mathrm{i}\\left(\\sin \\theta_1 \\cos \\theta_2+\\cos \\theta_1 \\sin \\theta_2\\right)\\right] \\\\\n& =r_1 r_2\\left[\\cos \\left(\\theta_1+\\theta_2\\right)+\\mathrm{i} \\sin \\left(\\theta_1+\\theta_2\\right)\\right]\n\\end{aligned}\n$$\n\n可以发现两个复数的乘积模长为两个复数模长的乘积，辐角为两个复数辐角之和。\n\n由于复数的乘法和除法互为逆运算，故两个复数之商 (第二个复数非零) 的模长为两个复数模长之商，辐角为两个复数辐角之差。\n\n### 直观理解1\n\n![img](https://raw.githubusercontent.com/1248818919/My_NOTE/master/assets/None%20class/FFT/%E6%AC%A7%E6%8B%89.webp)\n\n一个极不严谨但足够直观的证明:\n考虑到\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d} z} e^{\\mathrm{i} z}=\\mathrm{i} e^{\\mathrm{i} z}                   \n$$\n\n由于复数乘法的性质，乘以 $i$ 也就等价于逆时针旋转 $90^{\\circ}$ ，所以说 $e^{\\mathrm{i} z}$ 的导数就相当于 $e^{\\mathrm{i} z}$ 逆时针旋转 $90^{\\circ}$\n\n而当$x=0$时，$e^{\\mathrm{i}z}=1$，那么我们不难发现随$x$变化$e^{\\mathrm{i}z}$在单位圆上做圆周运动，那么对于单位圆上任意点${z} = {\\mathrm{cos}}\\theta+{\\mathfrak{i}}{\\mathrm{sin}}\\theta$,所以我们得到了以下的公式：\n\n$$\n\\begin{aligned}\ne^{\\mathrm{i}\\theta}=\\cos\\theta+\\mathrm{i}\\sin\\theta\n\\end{aligned}\n$$\n\n### 直观理解2\n另一个直观解释是如此指数函数可以视作复数乘法旋转的自然结果。\n\n已知复平面上有着与实直线上“几乎完全相同”的极限行为与连续函数等拓扑概念（后文会有更详细的解释），$\\mathbb{R}$上关于极限和连续函数的定义搬到$\\mathbb{C}$上基本依然成立，只需把实数的绝对值换成复数的模长即可。\n\n令$e(\\theta)=\\cos\\theta+\\mathrm{i}\\sin\\theta$，则乘以$e(\\theta)$箱单那关于在复平面上旋转$\\theta$角的变换，此时有$|e(\\theta)|^{2}\\,=\\,1\\,\\,,\\,\\,\\,\\,e(\\theta)e(\\gamma)=e(\\theta+\\gamma)\\,\\,,\\,\\,\\,\\,e(0)=1$且$e(\\theta)$为连续函数。\n\n更进一步的，出于直观我们知道在$\\theta$充分小的时候$\\tan\\theta\\approx\\theta\\approx\\sin\\theta$,从而当$n$无限大的时候$e(\\frac{\\theta}{n})\\approx1+\\begin{array}{c}\\frac{i\\theta}{n}\\end{array}$,现令$e(\\frac{\\theta}{n})=1+\\sigma_{n}\\;$，其中$lim_{n->\\infty}\\tau_n=0$\n\n![img](https://raw.githubusercontent.com/1248818919/My_NOTE/master/assets/None%20class/FFT/%E6%AC%A7%E6%8B%89.webp)\n\n因而,有辐角的乘法是角度的叠加可以得到下面的公式：\n$$\ne(\\theta)=e{\\left({\\frac{\\theta}{n}}\\right)}^{n}=\\left(1+{\\frac{\\mathrm{i}\\theta}{n}}+{\\frac{\\tau_{n}}{n}}\\right)^{n}\n$$\n\n把上述的二项式定理展开有\n\n$$\ne(\\theta)=\\left(1+{\\frac{{{\\mathrm{i}}}\\theta}{n}}\\right)^{n}+n\\left({\\frac{\\tau_{n}}{n}}\\right)\\left(1+{\\frac{{\\mathrm{i}}\\theta}{n}}\\right)^{n-1}+{\\frac{n(n-1)}{2}}\\left({\\frac{\\tau_{n}}{n}}\\right)^{2}\\left(1+{\\frac{{\\mathrm{i}}\\theta}{n}}\\right)^{n-2}+\\cdots+(\\frac{\\tau_n}{n})^{n}\n$$\n\n直观上诸含$\\tau$项都每一项均为前一项的高阶无穷小，所以取极限时必然消去。具体来说取充分大的$n$使得$|\\tau_n|<\\frac{1}{2}$且$|\\tau_n|<\\frac{\\epsilon}{2e^{\\pi}}$,则有\n\n$$\n\\begin{aligned} \\left|e(\\theta)-\\left(1+{\\frac{\\mathrm{i}\\theta}{n}}\\right)^{n}\\right| & \\leqslant\\left|n\\left({\\frac{\\tau_{n}}{n}}\\right)\\left(1+{\\frac{\\mathrm{i}\\theta}{n}}\\right)^{n-1}\\right|+\\left|{\\frac{n(n-1)}{2}}{\\Big(}{\\frac{\\tau_{n}}{n}}{\\Big)}^{2}\\left(1+{\\frac{\\mathrm{i}\\theta}{n}}\\right)^{n-2}\\right| + \\cdot \\cdot \\cdot \\ + \\left|\\tau\\right|^{n} \\\\ &\\leqslant\\left|\\tau_n\\right|\\left|\\left(1+\\frac{\\mathrm{i} \\theta}{n}\\right)^{n-1}\\right|+\\left|\\tau_n\\right|^2\\left|\\left(1+\\frac{\\mathrm{i} \\theta}{n}\\right)^{n-2}\\right|+\\cdots+\\left|\\tau_n\\right|^n \\\\ & \\leqslant\\left|\\tau_n\\right|\\left(1+\\left|\\frac{\\mathrm{i} \\theta}{n}\\right|\\right)^{n-1}+\\left|\\tau_n\\right|^2\\left(1+\\left|\\frac{\\mathrm{i} \\theta}{n}\\right|\\right)^{n-2}+\\cdots+\\left|\\tau_n\\right|^n \\\\ & \\leqslant e^{\\frac{\\theta}{n}}\\left(\\left|\\tau_n\\right|+\\left|\\tau_n\\right|^2+\\cdots+\\left|\\tau_n\\right|^n\\right) \\\\ & \\leqslant e^\\pi\\left|\\tau_n\\right| \\cdot \\frac{1-\\left|\\tau_n\\right|^n}{1-\\left|\\tau_n\\right|}<\\varepsilon\\end{aligned}\n$$\n\n## 3.多项式系数与点值表示\n\n对于任意 $n+1$ 次多项式 $f(x)=\\sum_{i=0}^n a_i x^i \\in X_n$ ，只需知道每一项的系数就可以唯一确定 $f(x)$ ，故 $f(x)$ 可以被写作 $\\left(a_0, a_1, a_2, \\ldots, a_n\\right)$ 的形式，即其系数的有序排列，这就是多项式的系数表示。\n\n我们还有以下结论：\n>$n$ 次多项式上 $n+1$ 个不同的点能唯一确定这个多项式\n\n即将 $n+1$ 个不同的数 $x_0, x_1, \\ldots, x_n$ 带入 $f(x)$ ，就能得到 $n+1$ 个不同的数值 $y_i=f\\left(x_i\\right)$ ，进而存在唯一的满足\n$$\n\\forall 0 \\leq i \\leq n, f\\left(x_i\\right)=y_i\n$$\n\n的 $n$ 次多项式 $f$ 。上述结论可以通过因式定理与代数基本定理，或者用范德蒙特行列式的性质证明。\n\n从而 $f(x)$ 也可以被写作\n$$\n\\left\\{\\left(x_0, f\\left(x_0\\right)\\right),\\left(x_1, f\\left(x_1\\right)\\right), \\ldots,\\left(x_n, f\\left(x_n\\right)\\right)\\right\\}\n$$\n\n这就是多项式的点值表示，在 $x_0, x_1, \\ldots, x_n$ 确定时，令 $\\tau(f)$ 表示 $f$ 的点值表示。\n我们假设两个多项式 $f(x), g(x)$ 的点值表示法分别为\n\n$$\n\\begin{aligned}\n& \\tau(f)=\\left\\{\\left(x_0, f\\left(x_0\\right)\\right),\\left(x_1, f\\left(x_1\\right)\\right), \\ldots,\\left(x_n, f\\left(x_n\\right)\\right)\\right\\} \\\\\n& \\tau(g)=\\left\\{\\left(x_0, g\\left(x_0\\right)\\right),\\left(x_1, g\\left(x_1\\right)\\right), \\ldots,\\left(x_m, g\\left(x_m\\right)\\right)\\right\\}\n\\end{aligned}\n$$\n\n则\n$$\n\\tau(f g)=\\left\\{\\left(x_0, f\\left(x_0\\right) \\cdot g\\left(x_0\\right)\\right),\\left(x_1, f\\left(x_1\\right) \\cdot g\\left(x_1\\right)\\right), \\cdots,\\left(x_{n+m}, f\\left(x_{n+m}\\right)\\right)\\right\\}\n$$\n\n于是多项式的乘法在点值表示法下可以以 $\\mathrm{O}(n)$ 的复杂度计算，所以我们如果能够在较低的时间复杂度内将系数表示法转化为点值表示法，再将点值表示法转回系数表示法，就能以较低的时间复杂度计算多项式的乘法。\n\n### 单位根\n\n以单位圆点为起点，单位圆的 $n$ 等分点为终点，在单位圆上可以得到 $n$ 个复数，设幅角为正且最小的复数为 $\\omega_n$ ，称为 $n$ 次单位根，即\n$$\n\\omega_n=\\cos \\frac{2 \\pi}{n}+\\mathrm{i} \\sin \\frac{2 \\pi}{n}\n$$\n\n由欧拉公式\n$$\n\\omega_n^k=\\cos \\frac{2 k \\pi}{n}+\\mathrm{i} \\sin \\frac{2 k \\pi}{n}\n$$\n\n特别地， $\\omega_n^0=\\omega_n^n=1$ 。\n\n可以发现单位根具有以下性质:\n$$\n\\begin{aligned}\n& \\omega_{r n}^{r k}= \\cos \\frac{2 r k \\pi}{r n}+\\mathrm{i} \\sin \\frac{2 r k \\pi}{r n}=\\omega_n^k \\quad & r \\in \\mathbb{N}^{+} \\\\\n& \\omega_n^{k+\\frac{n}{2}}=\\omega_n^k \\cdot\\left(\\cos \\left(\\frac{n}{2} \\cdot \\frac{2 \\pi}{n}\\right)+\\mathrm{i} \\sin \\left(\\frac{n}{2} \\cdot \\frac{2 \\pi}{n}\\right)\\right) \\quad & k \\in \\mathbb{N}^{+} \\\\\n& =\\omega_n^k \\cdot(\\cos \\pi+\\mathrm{i} \\sin \\pi) \\\\\n& =-\\omega_n^k \\\\\n& \\overline{\\omega_n^k}=\\cos \\frac{2 k \\pi}{n}-\\mathrm{i} \\sin \\frac{2 k \\pi}{n} \\\\\n& =\\cos \\left(2 \\pi-\\frac{2 k \\pi}{n}\\right)+\\mathrm{i} \\sin \\left(2 \\pi-\\frac{2 k \\pi}{n}\\right) \\\\\n& =\\omega_n^{n-k} \\\\\n&\n\\end{aligned}\n$$\n\n### 快速傅里叶变换\n\n对多项式 $f(x)=\\sum_{i=0}^{n-1} a_i x^i \\in X_{n-1}$ ，不失一般性的，设 $n=2^s \\quad s \\in \\mathbb{N}$ (由于在多项式的乘法中我们可以将一个多项式等价地看作是次数更高的高次项系数均为零的多项式，故可以将 $n$看作第一个大于等于它的 2 的整数次幕），考虑按 $a_i$ 下标的奇偶性将 $f(x)$ 中的项分为两部分，即\n$$\n\\begin{aligned}\nf(x) & =\\left(a_0+a_2 x^2+a_4 x^4+\\cdots+a_{n-2} x^{n-2}\\right) \\\\\n& +\\left(a_1 x+a_3 x^3+a_5 x^5+\\cdots+a_{n-1} x^{n-1}\\right)\n\\end{aligned}\n$$\n令\n$$\n\\begin{aligned}\n& f_1(x)=a_0+a_2 x^1+a_4 x^2+\\cdots+a_{n-2} x^{\\frac{n}{2}-1} \\\\\n& f_2(x)=a_1+a_3 x+a_5 x^2+\\cdots+a_{n-1} x^{\\frac{n}{2}-1}\n\\end{aligned}\n$$\n\n则\n$$\nf(x)=f_1\\left(x^2\\right)+x f_2\\left(x^2\\right)\n$$\n\n带入 $x=\\omega_n^k \\quad\\left(k<\\frac{n}{2}\\right)$ 可得\n$$\n\\begin{aligned}\nf\\left(\\omega_n^k\\right) & =f_1\\left(\\omega_n^{2 k}\\right)+\\omega_n^k f_2\\left(\\omega_n^{2 k}\\right) \\\\\n& =f_1\\left(\\omega_{\\frac{n}{2}}^k\\right)+\\omega_n^k f_2\\left(\\omega_{\\frac{n}{2}}^k\\right)\n\\end{aligned}\n$$\n\n带入 $\\omega_n^{k+\\frac{n}{2}}\\left(k<\\frac{n}{2}\\right)$ 可得\n$$\n\\begin{aligned}\nf\\left(\\omega_n^{k+\\frac{n}{2}}\\right) & =f_1\\left(\\omega_n^{2 k+n}\\right)+\\omega_n^{k+\\frac{n}{2}} f_2\\left(\\omega_n^{2 k+n}\\right) \\\\\n& =f_1\\left(\\omega_n^{2 k} \\cdot \\omega_n^n\\right)-\\omega_n^k f_2\\left(\\omega_n^{2 k} \\cdot \\omega_n^n\\right) \\\\\n& =f_1\\left(\\omega_n^{2 k}\\right)-\\omega_n^k f_2\\left(\\omega_n^{2 k}\\right) \\\\\n& =f_1\\left(\\omega_{\\frac{n}{2}}^k\\right)-\\omega_n^k f_2\\left(\\omega_{\\frac{n}{2}}^k\\right)\n\\end{aligned}\n$$\n\n观察 $(1),(2)$ 两式的结构，我们只需要求出 $f_1\\left(\\omega_{\\frac{n}{2}}^k\\right), f_2\\left(\\omega_{\\frac{n}{2}}^k\\right)$ 即可 $\\mathrm{O}(1)$ 求出 $(1),(2)$ 两式的值，进而再经过类似的步骤，我们可以以 $\\mathrm{O}(1)$ 的时间复杂度将问题继续转化为求 $f_1\\left(\\omega_{\\frac{n}{4}}^k\\right), f_2\\left(\\omega_{\\frac{n}{4}}^k\\right) \\ldots . .$. 最终问题被转化为求\n$$\nf_1\\left(\\omega_1^k\\right)=f_2\\left(\\omega_1^k\\right)=1\n$$\n\n故以 $\\mathrm{O}(\\log n)$ 的时间复杂度可以求出 $f\\left(\\omega_n^k\\right), f\\left(\\omega_n^{k+\\frac{n}{2}}\\right)$ ，进而可以以 $\\mathrm{O}(n \\log n)$ 的时间复杂度求出所有的 $f\\left(\\omega_n^k\\right)$ ，即我们以 $\\mathrm{O}(n \\log n)$ 的时间复杂度将 $f$ 的系数表示法转化为了点值表示法。\n\n### 快速傅里叶逆变换\n\n跑完FFT后我们就得到了多项式乘积的点值表示，现在我们需要将点值表示转回系数表示，这个转换的过程被称为离散傅里叶逆变换 (IDFT)。\n\n如果我们用矩阵将DFT的过程封装，那么DFT就相当于求\n$$\n\\left[\\begin{array}{ccccc}\n1 & 1 & 1 & \\cdots & 1 \\\\\n1 & \\left(\\omega_n^1\\right)^1 & \\left(\\omega_n^1\\right)^2 & \\cdots & \\left(\\omega_n^1\\right)^{n-1} \\\\\n1 & \\left(\\omega_n^2\\right)^1 & \\left(\\omega_n^2\\right)^2 & \\cdots & \\left(\\omega_n^2\\right)^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & \\left(\\omega_n^{n-1}\\right)^1 & \\left(\\omega_n^{n-1}\\right)^2 & \\cdots & \\left(\\omega_n^{n-1}\\right)^{n-1}\n\\end{array}\\right]\\left[\\begin{array}{c}\na_0 \\\\\na_1 \\\\\na_2 \\\\\n\\vdots \\\\\na_{n-1}\n\\end{array}\\right]=\\left[\\begin{array}{c}\ny_0 \\\\\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_{n-1}\n\\end{array}\\right]\n$$\n\n其中\n$$\n\\left[\\begin{array}{c}\na_0 \\\\\na_1 \\\\\na_2 \\\\\n\\vdots \\\\\na_{n-1}\n\\end{array}\\right]\n$$\n\n意义为多项式的系数表示法，\n$$\n\\left[\\begin{array}{c}\ny_0 \\\\\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_{n-1}\n\\end{array}\\right]\n$$\n\n意义为多项式的点值表示法， $y_i$ 即为 $f\\left(\\omega_n^i\\right)$ 。\n注意到\n$$\nx^n-1=(x-1)\\left(x^{n-1}+x^{n-2}+\\cdots+1\\right)\n$$\n\n于是在 $x=1$ 时\n$$\nx^{n-1}+x^{n-2}+\\cdots+1=n\n$$\n\n否则在 $x^n-1=0$ 时\n$$\nx^{n-1}+x^{n-2}+\\cdots+1=0\n$$\n\n其中 $x$ 为 $n$ 次单位根。\n受 $n$ 次单位根这一特性的启发，注意到 $x^{n-1}+x^{n-2}+\\cdots+1$ 在其形式上与矩阵乘法的关系，可以发现\n$$\n\\begin{aligned}\n{\\left[\\begin{array}{lllll}\n1 & \\left(\\omega_n^{n-i}\\right)^1 & \\left(\\omega_n^{n-i}\\right)^2 & \\cdots & \\left(\\omega_n^{n-i}\\right)^{n-1}\n\\end{array}\\right]\\left[\\begin{array}{c}\n1 \\\\\n\\left(\\omega_n^j\\right)^1 \\\\\n\\left(\\omega_n^j\\right)^2 \\\\\n\\vdots \\\\\n\\left(\\omega_n^j\\right)^{n-1}\n\\end{array}\\right] } & =\\sum_{k=0}^{n-1}\\left(\\omega_n^{n-i}\\right)^k\\left(\\omega_n^j\\right)^k \\\\\n& =\\sum_{k=0}^{n-1}\\left(\\omega_n^{n-i+j}\\right)^k \\\\\n& =\\left\\{\\begin{array}{cc}\nn & i=j \\\\\n0 & i \\neq j\n\\end{array}\\right.\n\\end{aligned}\n$$\n\n这表明\n$$\n\\mathbf{C}=\\frac{1}{n}\\left[\\begin{array}{ccccc}\n1 & 1 & 1 & \\cdots & 1 \\\\\n1 & \\left(\\omega_n^{n-1}\\right)^1 & \\left(\\omega_n^{n-1}\\right)^2 & \\cdots & \\left(\\omega_n^{n-1}\\right)^{n-1} \\\\\n1 & \\left(\\omega_n^{n-2}\\right)^1 & \\left(\\omega_n^{n-2}\\right)^2 & \\cdots & \\left(\\omega_n^{n-2}\\right)^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & \\left(\\omega_n^1\\right)^1 & \\left(\\omega_n^1\\right)^2 & \\cdots & \\left(\\omega_n^1\\right)^{n-1}\n\\end{array}\\right]\n$$\n\n为\n$$\n\\left[\\begin{array}{ccccc}\n1 & 1 & 1 & \\cdots & 1 \\\\\n1 & \\left(\\omega_n^1\\right)^1 & \\left(\\omega_n^1\\right)^2 & \\cdots & \\left(\\omega_n^1\\right)^{n-1} \\\\\n1 & \\left(\\omega_n^2\\right)^1 & \\left(\\omega_n^2\\right)^2 & \\cdots & \\left(\\omega_n^2\\right)^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & \\left(\\omega_n^{n-1}\\right)^1 & \\left(\\omega_n^{n-1}\\right)^2 & \\cdots & \\left(\\omega_n^{n-1}\\right)^{n-1}\n\\end{array}\\right]\n$$\n\n的逆矩阵。\n\n由上文标红部分\n$$\n\\begin{aligned}\n\\mathbf{C} & =\\frac{1}{n}\\left[\\begin{array}{ccccc}\n1 & 1 & 1 & \\cdots & 1 \\\\\n1 & \\left(\\omega_n^{n-1}\\right)^1 & \\left(\\omega_n^{n-1}\\right)^2 & \\cdots & \\left(\\omega_n^{n-1}\\right)^{n-1} \\\\\n1 & \\left(\\omega_n^{n-2}\\right)^1 & \\left(\\omega_n^{n-2}\\right)^2 & \\cdots & \\left(\\omega_n^{n-2}\\right)^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & \\left(\\omega_n^1\\right)^1 & \\left(\\omega_n^1\\right)^2 & \\cdots & \\left(\\omega_n^1\\right)^{n-1}\n\\end{array}\\right] \\\\\n= & \\frac{1}{n}\\left[\\begin{array}{ccccc}\n1 & 1 & 1 & \\cdots & 1 \\\\\n1 & \\left(\\overline{\\omega_n^1}\\right)^1 & \\left(\\overline{\\omega_n^1}\\right)^2 & \\cdots & \\left(\\overline{\\omega_n^1}\\right)^{n-1} \\\\\n1 & \\left(\\overline{\\omega_n^2}\\right)^1 & \\left(\\overline{\\omega_n^2}\\right)^2 & \\cdots & \\left(\\overline{\\omega_n^2}\\right)^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & \\left.\\overline{\\left(\\omega_n^{n-1}\\right.}\\right)^1 & \\left(\\overline{\\omega_n^{n-1}}\\right)^2 & \\cdots & \\left(\\overline{\\omega_n^{n-1}}\\right)^{n-1}\n\\end{array}\\right]\n\\end{aligned}\n$$\n\n所以将一个多项式在分治的过程中乘上的单位根变为其共轭复数，分治完的每一项除以 $n$ 即可得到原多项式的每一项系数。","tags":[],"folderPathname":"/None class","data":{},"createdAt":"2023-12-16T07:47:03.276Z","updatedAt":"2023-12-18T13:37:21.238Z","trashed":false,"_rev":"LhLGw0Jv0"}